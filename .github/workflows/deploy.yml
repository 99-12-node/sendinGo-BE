name: deploy

on:
  push:
    branches: [feature/deploy]

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.17]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: create env file
        working-directory: ./
        run: |
          pwd
          touch .env
          echo PORT=${{ vars.PORT }} >> .env
          echo ALIGO_BASE_URL=${{ secrets.ALIGO_BASE_URL }} >> .env
          echo ALIGO_USERID=${{ secrets.ALIGO_USERID }} >> .env
          echo ALIGO_APIKEY=${{ secrets.ALIGO_APIKEY }} >> .env
          echo ALIGO_TOKEN=${{ secrets.ALIGO_TOKEN }} >> .env
          echo ALIGO_SENDERKEY=${{ secrets.ALIGO_SENDERKEY }} >> .env
          echo SENDER=${{ secrets.SENDER }} >> .env
          echo RECEIVER_1=${{ secrets.RECEIVER_1 }} >> .env
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo AWS_REGION=${{ vars.AWS_REGION }} >> .env
          echo AWS_S3_BUCKET_NAME=${{ vars.AWS_S3_BUCKET_NAME }} >> .env
          echo DEV_DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
          echo DEV_DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DEV_DB_DATABASE=${{ vars.DB_DATABASE }} >> .env
          echo DEV_DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DEV_DB_DIALECT=${{ vars.DIALECT }} >> .env
          cat .env

      - name: zip file
        run: zip -r deploy.zip ./scripts ./appspec.yml ./.env ./package.json ./app.js ./src

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: upload to S3
        run: aws s3 cp --region ${{ vars.AWS_REGION }} ./deploy.zip s3://${{ vars.AWS_S3_BUCKET_NAME }}/deploy/

      - name: deploy with AWS codeDeploy
        run: aws deploy create-deployment --application-name ${{ vars.CODE_DEPLOY_APPLICATION_NAME }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ vars.CODE_DEPLOY_GROUP_NAME }} --s3-location bucket=${{ vars.AWS_S3_BUCKET_NAME }},bundleType=zip,key=deploy/deploy.zip
